buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.moowork.gradle:gradle-node-plugin:0.12")
    }
}

// Update appropriately for releases
version = '1.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "com.moowork.node"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar.archiveName = "family2family.${jar.extension}"

dependencies {
    compile("com.google.guava:guava:21.0")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.security.oauth:spring-security-oauth2")
    compile("com.h2database:h2")

    compile("org.webjars:bootstrap:3.3.7")
    compile("org.webjars:jquery:3.1.1")
    compile("org.webjars:react:15.3.2")
    compile("org.webjars.bower:toastr:2.1.3")
    compile("org.webjars.npm:babel-core:5.8.25")
    compile("org.webjars.npm:react-dom:15.0.1")

    // Test Dependencies
    testCompile("junit:junit:4.12")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

springBoot {
    // Provides build metadata in the META-INF directory
    buildInfo()
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('node_modules')
clean.delete << file('src/main/webapp/dist')
